{"version":3,"sources":["components/Layout/Container/Container.js","components/Cubes/CubeItem.js","components/Cubes/Cubes.js","prismic-configuration.js","images/climbing-goals.png","components/Icons/Icon.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","classes","className","children","CubeItem","useState","isActive","setActive","cubeRef","useRef","ref","onClick","console","log","current","scrollIntoView","behavior","block","inline","style","flexBasis","backgroundColor","colour","opacity","src","imageUrl","alt","cubeTitle","width","imageDimensions","height","display","descTitle","descText","cubes","items","data","types","leadersArr","map","el","name","text","titleSize","type","description","exemplar_image","url","dimensions","Math","random","apiEndpoint","env","API_ENDPNT","accessToken","TOKEN","client","Prismic","Icon","id","picture","App","React","doc","setDocData","useEffect","a","query","Predicates","at","response","results","fetchData","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2942018f.chunk.js","sourcesContent":["import './Layout.css';\n\n// Create the grid structure for the page\nconst Container = (props) => {\n  const classes = 'container ' + props.className;\n  return <div className={classes}>{props.children}</div>\n}\n\nexport default Container;","import React, { useState } from 'react';\nimport { useRef } from 'react'\nimport { Square1 } from '../Squares/Squares';\nimport './CubeItem.css'\n\n\nconst CubeItem = (props) => {\n  let [isActive, setActive] = useState(false);\n  const cubeRef = useRef();\n\n  function handleBackClick() {\n    // Scroll back to the title element...\n    cubeRef.current.scrollIntoView({ \n      behavior: \"smooth\",\n      block: \"start\",\n      inline: \"start\" \n    })\n  }\n\n  // Init cube click handler\n  const cubeToggle = () => {\n    if (isActive === false) {\n      setActive(true);\n      console.log(isActive);\n    } else {\n      setActive(false);\n      console.log(isActive);\n    }\n\n  };\n\n  const initFunctions = () => {\n    cubeToggle();\n    handleBackClick();\n  };\n\n  // Create the cube item. Add inline styling to change element appearance on click events\n  return (\n    <div ref={cubeRef} onClick={initFunctions} className=\"cube-item\" style={{flexBasis: `${isActive ? \"100%\" : \"33%\"}`}}>\n      <div className={!isActive ? null : \"cube-item__overlay\"} style={{backgroundColor: `${isActive ? `${props.colour}` : 'black'}`, opacity: '0.07'}}></div>\n      {/* <Square1 /> */}\n      <img className='cube-item__image'\n       src={props.imageUrl}\n       alt={props.cubeTitle}\n       style={{width: `${props.imageDimensions[0]}`, height: `${props.imageDimensions[1]}`, opacity: `${isActive ? \"1\" : '0.1'}`}} \n      />\n      <div className=\"cube-item__heading\" style={{display: `${isActive ? \"block\" : \"none\"}`}}>\n        <h3 style={{display: `${isActive ? \"block\" : \"none\"}`}}>{props.cubeTitle}</h3>\n      </div>\n      <div className=\"cube-item__description\" style={{display: `${isActive ? \"block\" : \"none\"}`}}>\n        <h3 style={{display: `${isActive ? \"block\" : \"none\"}`}}>{props.descTitle}</h3>\n        <p style={{display: `${isActive ? \"block\" : \"none\"}`}}>{props.descText}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CubeItem;","import CubeItem from './CubeItem';\nimport './Cubes.css'\n\nconst cubes = (props) => {\n  const createKey = () => Math.random();\n  console.log(props.items.data.types);\n  const leadersArr = props.items.data.types;\n  return (\n    <div className=\"cubes-container\">\n      {/* Change each item in the array to an ExpenseItem JSX Component */}\n      {leadersArr.map((el) => (\n        <CubeItem\n          key={createKey()}\n          cubeTitle={el.name.text}\n          titleSize={el.name.type}\n          descTitle={el.description[0].text}\n          descText={el.description[1].text}\n          imageUrl ={el.exemplar_image.url}\n          imageDimensions={el.exemplar_image.dimensions}\n          colour={el.colour}\n          />\n        ))};\n    </div>\n  );\n};\n\nexport default cubes;","import Prismic from '@prismicio/client';\nimport env from \"react-dotenv\";\n\nconst apiEndpoint = env.API_ENDPNT\nconst accessToken = env.TOKEN\n\nconst client = Prismic.client(apiEndpoint, { accessToken });\n\nexport default client","export default __webpack_public_path__ + \"static/media/climbing-goals.21503bd8.png\";","import './Icon.css';\nimport picture from '../../images/climbing-goals.png';\n\nconst Icon = () => {\n  return (\n    <div id=\"icon-hero__container\">\n      <img className='icon__image'\n       src={picture}\n       alt=\"Climbing Icon\" \n       />\n       <h1 id=\"icon-hero__title\">The 9 Leader Types</h1>\n    </div>\n  )\n}\n\nexport default Icon;","import React from \"react\";\nimport './App.css';\nimport Container from './components/Layout/Container/Container';\nimport Cubes from './components/Cubes/Cubes';\nimport Prismic from '@prismicio/client';\nimport client from './prismic-configuration';\nimport Icon from './components/Icons/Icon';\n// import { Button } from '@material-ui/core';\n\n\nfunction App() {\n  \n  // Instantiate the doc variable with useState\n  const [doc, setDocData] = React.useState(null)\n  \n  React.useEffect(() => {\n  const fetchData = async () => {\n    const response = await client.query(\n      Prismic.Predicates.at('document.type', 'leader-types')\n    )\n    if (response) {\n      setDocData(response.results[0])\n    }\n  }\n  fetchData()\n}, [])\n\nreturn (\n  <React.Fragment>\n    {\n      doc ? (\n        <div id=\"main-container\">\n          <Container className=\"container\">\n            <Icon />\n            <Cubes items={doc} />\n          </Container>\n        </div>\n      ) : <div>\n        <Container className=\"container\">\n          Loading....\n        </Container>\n      </div>\n    }\n  </React.Fragment>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}